import 'phaser'
import { Main } from "./Main"

var Grid: number[][] = [
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0],
    [0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0],
    [0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0],
    [0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0],
    [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
    [0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0],
    [0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0],
    [0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0],
    [0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0],
    [0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0],
    [0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0],
    [0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0],
    [0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0],
    [0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0],
    [0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0],
    [0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0],
    [0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0],
    [0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0],
    [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
];
function grid(x){
    var y: number;
    if(x <= 31) {
        y = x * 32 -16;
    }
    if (x > 31) {
        y = (x + 16) /32
    }        
    return y;
}

class PacmanClass {
    public direction: number;
    public speed: number;
    private wannaGo: string;

    constructor(){
        this.direction = 0;
        this.speed = 2;
    }

    move(player,W,A,S,D) {
        if (W.isDown == true) {
            this.wannaGo = "up";
                       
        }
        if (A.isDown == true) {
            this.wannaGo = "left";
            if (Grid[Math.floor(grid(player.y))][Math.floor(grid(player.x)) - 1] == 1) {
                this.direction = 180;
            }
        }
        if (S.isDown == true) {
            this.wannaGo = "down";
            if (Grid[Math.floor(grid(player.y))][Math.floor(grid(player.x))] == 1) {
                this.direction = 90;
            }
        }
        if (D.isDown == true) {
            this.wannaGo = "right";
            if (Grid[Math.floor(grid(player.y))][Math.floor(grid(player.x))] == 1) {
                this.direction = 0;
            }
        }

        if(this.wannaGo == "up") {
            if (Grid[Math.floor(grid(player.y))-1][Math.floor(grid(player.x))] == 1) {
                this.direction = 270;
            }
        }

        //moving Pacman to the coresponding stop
        if (this.direction == 270) {
            if (Grid[Math.floor(grid(player.y)) - 1][Math.floor(grid(player.x))] == 1) {
                player.y -= this.speed;
            }
        }
        if (this.direction == 180) {
            if (Grid[Math.floor(grid(player.y))][Math.floor(grid(player.x)) - 1] == 1) {
                player.x -= this.speed;
            }
        }
        if (this.direction == 90) {
            if (Grid[Math.floor(grid(player.y))][Math.floor(grid(player.x))] == 1) {
                player.y += this.speed;
            }
        }
        if (this.direction == 0) {
            if (Grid[Math.floor(grid(player.y))][Math.floor(grid(player.x))] == 1) {
                player.x += this.speed;
            }
        }

        return this.direction;
        
    }

}

export { PacmanClass }